package org.geovistory.toolbox.streams.project.entity;

import org.apache.kafka.streams.StreamsBuilder;
import org.apache.kafka.streams.kstream.KStream;
import org.apache.kafka.streams.kstream.KTable;
import org.geovistory.toolbox.streams.avro.*;
import org.geovistory.toolbox.streams.lib.ConfluentAvroSerdes;
import org.geovistory.toolbox.streams.lib.InputTopicHelper;

/**
 * This class provides helper methods to register
 * source topics (topics consumed but not generated by this app)
 */
public class RegisterInputTopic extends InputTopicHelper {
    public ConfluentAvroSerdes avroSerdes;

    public RegisterInputTopic(StreamsBuilder builder) {
        super(builder);
        this.avroSerdes = new ConfluentAvroSerdes();
    }

    public KTable<ProjectClassKey, ProjectEntityLabelConfigValue> projectEntityLabelConfigTable() {
        return getTable(
                Env.INSTANCE.TOPIC_PROJECT_ENTITY_LABEL_CONFIG,
                avroSerdes.ProjectClassKey(),
                avroSerdes.ProjectEntityLabelConfigValue()
        );
    }


    public KTable<ProjectEntityKey, ProjectEntityValue> projectEntityTable() {
        return getTable(
                Env.INSTANCE.TOPIC_PROJECT_ENTITY,
                avroSerdes.ProjectEntityKey(),
                avroSerdes.ProjectEntityValue()
        );
    }

    public KTable<ProjectTopStatementsKey, ProjectTopStatementsValue> projectTopOutgoingStatementsTable() {
        return getTable(
                Env.INSTANCE.TOPIC_PROJECT_TOP_OUTGOING_STATEMENTS,
                avroSerdes.ProjectTopStatementsKey(),
                avroSerdes.ProjectTopStatementsValue()
        );
    }

    public KTable<OntomeClassKey, OntomeClassMetadataValue> ontomeClassMetadataTable() {
        return getTable(
                Env.INSTANCE.TOPIC_ONTOME_CLASS_METADATA,
                avroSerdes.OntomeClassKey(),
                avroSerdes.OntomeClassMetadataValue()
        );
    }

    public KTable<ProjectClassLabelKey, ProjectClassLabelValue> projectClassLabelTable() {
        return getTable(
                Env.INSTANCE.TOPIC_PROJECT_CLASS_LABEL,
                avroSerdes.ProjectClassLabelKey(),
                avroSerdes.ProjectClassLabelValue()
        );
    }

    public KTable<ProjectEntityKey, ProjectEntityTopStatementsValue> projectEntityTopStatementsTable() {
        return getTable(
                Env.INSTANCE.TOPIC_PROJECT_ENTITY_TOP_STATEMENTS,
                avroSerdes.ProjectEntityKey(),
                avroSerdes.ProjectEntityTopStatementsValue()
        );
    }
    public KStream<ProjectEntityKey, ProjectEntityTopStatementsValue> projectEntityTopStatementsStream() {
        return getStream(
                Env.INSTANCE.TOPIC_PROJECT_ENTITY_TOP_STATEMENTS,
                avroSerdes.ProjectEntityKey(),
                avroSerdes.ProjectEntityTopStatementsValue()
        );
    }

    public KTable<HasTypePropertyKey, HasTypePropertyValue> hasTypePropertyTable() {
        return getTable(
                Env.INSTANCE.TOPIC_HAS_TYPE_PROPERTY,
                avroSerdes.HasTypePropertyKey(),
                avroSerdes.HasTypePropertyValue()
        );
    }

}