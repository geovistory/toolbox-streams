package org.geovistory.toolbox.streams.base.config;

import org.apache.kafka.streams.kstream.KStream;
import org.apache.kafka.streams.kstream.KTable;
import org.geovistory.toolbox.streams.avro.*;
import org.geovistory.toolbox.streams.lib.TsRegisterInputTopic;

import javax.enterprise.context.ApplicationScoped;
import javax.inject.Inject;

/**
 * This class provides helper methods to register
 * source topics (topics consumed but not generated by this app)
 */

@ApplicationScoped
public class RegisterInputTopic extends TsRegisterInputTopic {

    @Inject
    AvroSerdes avroSerdes;
    @Inject
    public BuilderSingleton builderSingleton;

    @Inject
    public InputTopicNames inputTopicNames;

    RegisterInputTopic() {
    }

    public RegisterInputTopic(AvroSerdes avroSerdes, BuilderSingleton builderSingleton, InputTopicNames inputTopicNames) {
        this.avroSerdes = avroSerdes;
        this.builderSingleton = builderSingleton;
        this.inputTopicNames = inputTopicNames;
    }


    public KStream<dev.projects.text_property.Key, dev.projects.text_property.Value> proTextPropertyStream() {
        return getRepartitionedStream(
                builderSingleton.builder,
                inputTopicNames.proTextProperty(),
                avroSerdes.ProTextPropertyKey(),
                avroSerdes.ProTextPropertyValue()
        );
    }

    public KTable<dev.projects.dfh_profile_proj_rel.Key, dev.projects.dfh_profile_proj_rel.Value> proProfileProjRelTable() {
        return getRepartitionedTable(
                builderSingleton.builder,
                inputTopicNames.proProfileProjRel(),
                avroSerdes.ProProfileProjRelKey(),
                avroSerdes.ProProfileProjRelValue()
        );
    }


    public KTable<dev.projects.project.Key, dev.projects.project.Value> proProjectTable() {
        return getRepartitionedTable(
                builderSingleton.builder,
                inputTopicNames.proProject(),
                avroSerdes.ProProjectKey(),
                avroSerdes.ProProjectValue()
        );
    }

    public KTable<dev.system.config.Key, dev.system.config.Value> sysConfigTable() {
        return getRepartitionedTable(
                builderSingleton.builder,
                inputTopicNames.sysConfig(),
                avroSerdes.SysConfigKey(),
                avroSerdes.SysConfigValue()
        );
    }

    public KStream<dev.projects.entity_label_config.Key, dev.projects.entity_label_config.Value> proEntityLabelConfigStream() {
        return getStream(
                builderSingleton.builder,
                inputTopicNames.proEntityLabelConfig(),
                avroSerdes.ProEntityLabelConfigKey(),
                avroSerdes.ProEntityLabelConfigValue()
        );
    }

    public KStream<OntomeClassKey, OntomeClassValue> ontomeClassStream() {
        return getStream(
                builderSingleton.builder,
                inputTopicNames.ontomeClass(),
                avroSerdes.OntomeClassKey(), avroSerdes.OntomeClassValue());
    }

    public KStream<OntomePropertyKey, OntomePropertyValue> ontomePropertyStream() {
        return getStream(
                builderSingleton.builder,
                inputTopicNames.ontomeProperty(),
                avroSerdes.OntomePropertyKey(), avroSerdes.OntomePropertyValue());
    }

    public KTable<OntomePropertyKey, OntomePropertyValue> ontomePropertyTable() {
        return getTable(
                builderSingleton.builder,
                inputTopicNames.ontomeProperty(),
                avroSerdes.OntomePropertyKey(), avroSerdes.OntomePropertyValue());
    }

    public KStream<OntomeClassLabelKey, OntomeClassLabelValue> ontomeClassLabelStream() {
        return getStream(
                builderSingleton.builder,
                inputTopicNames.ontomeClassLabel(),
                avroSerdes.OntomeClassLabelKey(), avroSerdes.OntomeClassLabelValue());
    }

    public KTable<OntomeClassLabelKey, OntomeClassLabelValue> ontomeClassLabelTable() {
        return getTable(
                builderSingleton.builder,
                inputTopicNames.ontomeClassLabel(),
                avroSerdes.OntomeClassLabelKey(), avroSerdes.OntomeClassLabelValue());
    }

    public KStream<OntomePropertyLabelKey, OntomePropertyLabelValue> ontomePropertyLabelStream() {
        return getStream(
                builderSingleton.builder,
                inputTopicNames.ontomePropertyLabel(),
                avroSerdes.OntomePropertyLabelKey(), avroSerdes.OntomePropertyLabelValue());
    }

    public KTable<OntomePropertyLabelKey, OntomePropertyLabelValue> ontomePropertyLabelTable() {
        return getTable(
                builderSingleton.builder,
                inputTopicNames.ontomePropertyLabel(),
                avroSerdes.OntomePropertyLabelKey(), avroSerdes.OntomePropertyLabelValue());
    }

}