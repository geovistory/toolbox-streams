package org.geovistory.toolbox.streams.entity;

import org.apache.kafka.streams.kstream.KStream;
import org.apache.kafka.streams.kstream.KTable;
import org.geovistory.toolbox.streams.avro.*;
import org.geovistory.toolbox.streams.lib.TsRegisterInputTopic;

import jakarta.enterprise.context.ApplicationScoped;
import jakarta.inject.Inject;

/**
 * This class provides helper methods to register
 * source topics (topics consumed but not generated by this app)
 */
@ApplicationScoped
public class RegisterInputTopic extends TsRegisterInputTopic {

    @Inject
    AvroSerdes avroSerdes;
    @Inject
    public BuilderSingleton builderSingleton;

    @Inject
    public InputTopicNames inputTopicNames;


    public RegisterInputTopic(AvroSerdes avroSerdes, BuilderSingleton builderSingleton, InputTopicNames inputTopicNames) {
        this.avroSerdes = avroSerdes;
        this.builderSingleton = builderSingleton;
        this.inputTopicNames = inputTopicNames;
    }

    public KTable<OntomeClassKey, OntomeClassMetadataValue> ontomeClassMetadataTable() {
        return getTable(
                builderSingleton.builder,
                inputTopicNames. getOntomeClassMetadata(),
                avroSerdes.OntomeClassKey(),
                avroSerdes.OntomeClassMetadataValue()
        );
    }

    public KTable<HasTypePropertyKey, HasTypePropertyValue> hasTypePropertyTable() {
        return getTable(
                builderSingleton.builder,
                inputTopicNames. getHasTypeProperty(),
                avroSerdes.HasTypePropertyKey(),
                avroSerdes.HasTypePropertyValue()
        );
    }


    public KTable<ProjectEntityKey, ProjectEntityValue> projectEntityTable() {
        return getTable(
                builderSingleton.builder,
                inputTopicNames. getProjectEntity(),
                avroSerdes.ProjectEntityKey(),
                avroSerdes.ProjectEntityValue()
        );
    }

    public KTable<ProjectTopStatementsKey, ProjectTopStatementsValue> projectTopOutgoingStatementsTable() {
        return getTable(
                builderSingleton.builder,
                inputTopicNames. getProjectTopOutgoingStatements(),
                avroSerdes.ProjectTopStatementsKey(),
                avroSerdes.ProjectTopStatementsValue()
        );
    }

    public KStream<ProjectTopStatementsKey, ProjectTopStatementsValue> projectTopOutgoingStatementsStream() {
        return getStream(
                builderSingleton.builder,
                inputTopicNames. getProjectTopOutgoingStatements(),
                avroSerdes.ProjectTopStatementsKey(),
                avroSerdes.ProjectTopStatementsValue()
        );
    }

    public KTable<ProjectClassLabelKey, ProjectClassLabelValue> projectClassLabelTable() {
        return getTable(
                builderSingleton.builder,
                inputTopicNames. getProjectClassLabel(),
                avroSerdes.ProjectClassLabelKey(),
                avroSerdes.ProjectClassLabelValue()
        );
    }


    public KTable<CommunityEntityKey, CommunityEntityValue> communityEntityTable() {
        return getTable(
                builderSingleton.builder,
                inputTopicNames. getCommunityEntity(),
                avroSerdes.CommunityEntityKey(),
                avroSerdes.CommunityEntityValue()
        );
    }

    public KTable<CommunityTopStatementsKey, CommunityTopStatementsValue> communityTopOutgoingStatementsTable() {
        return getTable(
                builderSingleton.builder,
                inputTopicNames. getCommunityTopOutgoingStatements(),
                avroSerdes.CommunityTopStatementsKey(),
                avroSerdes.CommunityTopStatementsValue()
        );
    }

    public KStream<CommunityTopStatementsKey, CommunityTopStatementsValue> communityTopOutgoingStatementsStream() {
        return getStream(
                builderSingleton.builder,
                inputTopicNames. getCommunityTopOutgoingStatements(),
                avroSerdes.CommunityTopStatementsKey(),
                avroSerdes.CommunityTopStatementsValue()
        );
    }


    public KTable<OntomeClassLabelKey, CommunityClassLabelValue> communityClassLabelTable() {
        return getTable(
                builderSingleton.builder,
                inputTopicNames. getCommunityClassLabel(),
                avroSerdes.OntomeClassLabelKey(),
                avroSerdes.CommunityClassLabelValue()
        );
    }


}