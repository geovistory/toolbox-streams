package org.geovistory.toolbox.streams.entity;

import jakarta.enterprise.context.ApplicationScoped;
import jakarta.inject.Inject;
import org.apache.kafka.streams.kstream.KTable;
import org.geovistory.toolbox.streams.avro.*;
import org.geovistory.toolbox.streams.lib.TsRegisterInputTopic;

/**
 * This class provides helper methods to register
 * source topics (topics consumed but not generated by this app)
 */
@ApplicationScoped
public class RegisterInputTopic extends TsRegisterInputTopic {

    @Inject
    ConfiguredAvroSerde avroSerdes;
    @Inject
    public BuilderSingleton builderSingleton;

    @Inject
    public InputTopicNames inputTopicNames;


    public KTable<OntomeClassKey, OntomeClassMetadataValue> ontomeClassMetadataTable() {
        return getTable(
                builderSingleton.builder,
                inputTopicNames.getOntomeClassMetadata(),
                avroSerdes.key(),
                avroSerdes.value()
        );
    }

    public KTable<HasTypePropertyKey, HasTypePropertyValue> hasTypePropertyTable() {
        return getTable(
                builderSingleton.builder,
                inputTopicNames.getHasTypeProperty(),
                avroSerdes.key(),
                avroSerdes.value()
        );
    }


    public KTable<ProjectEntityKey, ProjectEntityValue> projectEntityTable() {
        return getTable(
                builderSingleton.builder,
                inputTopicNames.getProjectEntity(),
                avroSerdes.key(),
                avroSerdes.value()
        );
    }

    public KTable<ProjectClassLabelKey, ProjectClassLabelValue> projectClassLabelTable() {
        return getTable(
                builderSingleton.builder,
                inputTopicNames.getProjectClassLabel(),
                avroSerdes.key(),
                avroSerdes.value()
        );
    }


    public KTable<ProjectEntityKey, ProjectEntityValue> communityEntityTable() {
        return getTable(
                builderSingleton.builder,
                inputTopicNames.getCommunityEntity(),
                avroSerdes.key(),
                avroSerdes.value()
        );
    }


    public KTable<OntomeClassLabelKey, CommunityClassLabelValue> communityClassLabelTable() {
        return getTable(
                builderSingleton.builder,
                inputTopicNames.getCommunityClassLabel(),
                avroSerdes.key(),
                avroSerdes.value()
        );
    }


}