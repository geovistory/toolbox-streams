package org.geovistory.toolbox.streams.lib;

import org.junit.jupiter.api.Test;

import java.util.Base64;

import static org.assertj.core.api.Assertions.assertThat;

public class GeoUtilsTest {
    // base64 encoded Extended Well-known binary, generated by debezium pg connector
    // from PostGis Geometry "SRID=4326;POINT(2.348611 48.853333)"
    String base64EncodedEWKB = "AQEAACDmEAAA9DRgkPTJAkB9zAcEOm1IQA==";

    @Test
    void testWkbToXY() {
        double x = 1;
        double y = 2;
        int srid = 4326;
        var bb = GeoUtils.pointToBytes(x, y, srid);
        var result = GeoUtils.bytesToPoint(bb);
        assertThat(result.getX()).isEqualTo(x);
        assertThat(result.getY()).isEqualTo(y);
    }

    @Test
    void testBase64EncodedWkbToXY() {

        byte[] bytes = java.util.Base64.getDecoder().decode(base64EncodedEWKB);

        var result = GeoUtils.bytesToPoint(bytes);

        assertThat(result.getX()).isEqualTo(2.348611);
        assertThat(result.getY()).isEqualTo(48.853333);

    }

    @Test
    void testPointToBytes() {

        double x = 2.348611;
        double y = 48.853333;
        int srid = 4326;
        var bytes = GeoUtils.pointToBytes(x, y, srid);
        var result = new String(Base64.getEncoder().encode(bytes.array()));
        assertThat(result).isEqualTo(base64EncodedEWKB);

    }


}

