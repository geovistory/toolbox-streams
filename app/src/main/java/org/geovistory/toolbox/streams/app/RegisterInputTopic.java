package org.geovistory.toolbox.streams.app;

import org.apache.kafka.streams.StreamsBuilder;
import org.apache.kafka.streams.kstream.Consumed;
import org.apache.kafka.streams.kstream.KTable;
import org.geovistory.toolbox.streams.lib.ConfluentAvroSerdes;

/**
 * This class provides helper methods to register
 * source topics (topics consumed but not generated by this app)
 */
public class RegisterInputTopic {
    public StreamsBuilder builder;
    public ConfluentAvroSerdes avroSerdes;

    public RegisterInputTopic(StreamsBuilder builder) {
        this.builder = builder;
        this.avroSerdes = new ConfluentAvroSerdes();
    }
    public KTable<dev.projects.project.Key, dev.projects.project.Value> proProjectTable() {
        return builder.table(
                DbTopicNames.pro_projects.getName(),
                Consumed.with(avroSerdes.ProProjectKey(), avroSerdes.ProProjectValue())
        );
    }
    public KTable<dev.projects.text_property.Key, dev.projects.text_property.Value> proTextPropertyTable() {
        return builder.table(
                DbTopicNames.pro_text_property.getName(),
                Consumed.with(avroSerdes.ProTextPropertyKey(), avroSerdes.ProTextPropertyValue())
        );
    }

    public KTable<dev.projects.dfh_profile_proj_rel.Key, dev.projects.dfh_profile_proj_rel.Value> proProfileProjRelTable() {
        return builder.table(
                DbTopicNames.pro_dfh_profile_proj_rel.getName(),
                Consumed.with(avroSerdes.ProProfileProjRelKey(), avroSerdes.ProProfileProjRelValue())
        );
    }

    public KTable<dev.projects.info_proj_rel.Key, dev.projects.info_proj_rel.Value> proInfoProjRelTable() {
        return builder.table(
                DbTopicNames.pro_info_proj_rel.getName(),
                Consumed.with(avroSerdes.ProInfoProjRelKey(), avroSerdes.ProInfoProjRelValue())
        );
    }

    public KTable<dev.information.resource.Key, dev.information.resource.Value> infResourceTable() {
        return builder.table(
                DbTopicNames.inf_resource.getName(),
                Consumed.with(avroSerdes.InfResourceKey(), avroSerdes.InfResourceValue())
        );
    }

    public KTable<dev.system.config.Key, dev.system.config.Value> sysConfigTable() {
        return builder.table(
                DbTopicNames.sys_config.getName(),
                Consumed.with(avroSerdes.SysConfigKey(), avroSerdes.SysConfigValue())
        );
    }

    public KTable<dev.data_for_history.api_property.Key, dev.data_for_history.api_property.Value> dfhApiPropertyTable() {
        return builder.table(
                DbTopicNames.dfh_api_property.getName(),
                Consumed.with(avroSerdes.DfhApiPropertyKey(), avroSerdes.DfhApiPropertyValue())
        );
    }
    public KTable<dev.data_for_history.api_class.Key, dev.data_for_history.api_class.Value> dfhApiClassTable() {
        return builder.table(
                DbTopicNames.dfh_api_class.getName(),
                Consumed.with(avroSerdes.DfhApiClassKey(), avroSerdes.DfhApiClassValue())
        );
    }

}
