
package org.geovistory.toolbox.streams.entity.preview;

import org.apache.kafka.streams.kstream.KTable;
import org.geovistory.toolbox.streams.avro.*;
import org.geovistory.toolbox.streams.lib.TsRegisterInputTopic;

import javax.enterprise.context.ApplicationScoped;
import javax.inject.Inject;

/**
 * This class provides helper methods to register
 * output topics (generated by this app).
 * These helper methods are mainly used for testing.
 */
@ApplicationScoped
public class RegisterInputTopic extends TsRegisterInputTopic {

    @Inject
    AvroSerdes avroSerdes;
    @Inject
    public BuilderSingleton builderSingleton;

    @Inject
    public InputTopicNames inputTopicNames;

    public RegisterInputTopic(AvroSerdes avroSerdes, BuilderSingleton builderSingleton, InputTopicNames inputTopicNames) {
        this.avroSerdes = avroSerdes;
        this.builderSingleton = builderSingleton;
        this.inputTopicNames = inputTopicNames;
    }


    public KTable<ProjectEntityKey, ProjectEntityValue> projectEntityTable() {
        return getTable(
                builderSingleton.builder,
                inputTopicNames. projectEntity,
                avroSerdes.ProjectEntityKey(),
                avroSerdes.ProjectEntityValue()
        );
    }

    public KTable<ProjectEntityKey, ProjectEntityLabelValue> projectEntityLabelTable() {
        return getTable(
                builderSingleton.builder,
                inputTopicNames. projectEntityLabel,
                avroSerdes.ProjectEntityKey(),
                avroSerdes.ProjectEntityLabelValue()
        );
    }

    public KTable<ProjectEntityKey, ProjectEntityTypeValue> projectEntityTypeTable() {
        return getTable(
                builderSingleton.builder,
                inputTopicNames. projectEntityType,
                avroSerdes.ProjectEntityKey(),
                avroSerdes.ProjectEntityTypeValue()
        );
    }

    public KTable<ProjectEntityKey, TimeSpanValue> projectEntityTimeSpanTable() {
        return getTable(
                builderSingleton.builder,
                inputTopicNames. projectEntityTimeSpan,
                avroSerdes.ProjectEntityKey(),
                avroSerdes.TimeSpanValue()
        );
    }

    public KTable<ProjectEntityKey, ProjectEntityFulltextValue> projectEntityFulltextTable() {
        return getTable(
                builderSingleton.builder,
                inputTopicNames. projectEntityFulltext,
                avroSerdes.ProjectEntityKey(),
                avroSerdes.ProjectEntityFulltextValue()
        );
    }

    public KTable<ProjectEntityKey, ProjectEntityClassLabelValue> projectEntityClassLabelTable() {
        return getTable(
                builderSingleton.builder,
                inputTopicNames. projectEntityClassLabel,
                avroSerdes.ProjectEntityKey(),
                avroSerdes.ProjectEntityClassLabelValue()
        );
    }

    public KTable<ProjectEntityKey, ProjectEntityClassMetadataValue> projectEntityClassMetadataTable() {
        return getTable(
                builderSingleton.builder,
                inputTopicNames. projectEntityClassMetadata,
                avroSerdes.ProjectEntityKey(),
                avroSerdes.ProjectEntityClassMetadataValue()
        );
    }







    public KTable<CommunityEntityKey, CommunityEntityValue> communityEntityTable() {
        return getTable(
                builderSingleton.builder,
                inputTopicNames. communityEntity,
                avroSerdes.CommunityEntityKey(),
                avroSerdes.CommunityEntityValue()
        );
    }

    public KTable<CommunityEntityKey, CommunityEntityLabelValue> communityEntityLabelTable() {
        return getTable(
                builderSingleton.builder,
                inputTopicNames. communityEntityLabel,
                avroSerdes.CommunityEntityKey(),
                avroSerdes.CommunityEntityLabelValue()
        );
    }

    public KTable<CommunityEntityKey, CommunityEntityTypeValue> communityEntityTypeTable() {
        return getTable(
                builderSingleton.builder,
                inputTopicNames. communityEntityType,
                avroSerdes.CommunityEntityKey(),
                avroSerdes.CommunityEntityTypeValue()
        );
    }

    public KTable<CommunityEntityKey, TimeSpanValue> communityEntityTimeSpanTable() {
        return getTable(
                builderSingleton.builder,
                inputTopicNames. communityEntityTimeSpan,
                avroSerdes.CommunityEntityKey(),
                avroSerdes.TimeSpanValue()
        );
    }

    public KTable<CommunityEntityKey, CommunityEntityFulltextValue> communityEntityFulltextTable() {
        return getTable(
                builderSingleton.builder,
                inputTopicNames. communityEntityFulltext,
                avroSerdes.CommunityEntityKey(),
                avroSerdes.CommunityEntityFulltextValue()
        );
    }

    public KTable<CommunityEntityKey, CommunityEntityClassLabelValue> communityEntityClassLabelTable() {
        return getTable(
                builderSingleton.builder,
                inputTopicNames. communityEntityClassLabel,
                avroSerdes.CommunityEntityKey(),
                avroSerdes.CommunityEntityClassLabelValue()
        );
    }

    public KTable<CommunityEntityKey, CommunityEntityClassMetadataValue> communityEntityClassMetadataTable() {
        return getTable(
                builderSingleton.builder,
                inputTopicNames.communityEntityClassMetadata,
                avroSerdes.CommunityEntityKey(),
                avroSerdes.CommunityEntityClassMetadataValue()
        );
    }

}
