# location of streams store data (rocks-db)
TS_STATE_DIR=../tmp/kafka-streams

# kafka bootstrap servers
TS_BOOTSTRAP_SERVERS=localhost:9092

# apicurio registry server
TS_APICURIO_REGISTRY_URL=http://localhost:8080/apis/registry/v2

# kafka streams application id
TS_APPLICATION_ID=localapp

# Output topic name prefix (will be joined with a "." with topic name)
TS_OUTPUT_TOPIC_NAME_PREFIX="ts-dev-0.1.0-pr-8.2"

# Input topic name prefix (will be joined with a "." with topic name)
TS_INPUT_TOPIC_NAME_PREFIX="dev"

########## MEMORY MANAGEMENT ##############

# RocksDB Memory config
ROCKSDB_TOTAL_OFF_HEAP_MB=2000
ROCKSDB_TOTAL_MEMTABLE_MB=200

# Streams Memory config
# Docs:
# - https://kafka.apache.org/33/documentation/streams/developer-guide/memory-mgmt.html
# - https://kafka.apache.org/documentation/#streamsconfigs

# cache.max.bytes.buffering
# Maximum number of memory bytes to be used for buffering across all threads
# For deeper understanding:
# https://kafka.apache.org/33/documentation/streams/architecture
# Per partition of the input topics, Kafka Streams creates a task.
# Each task instantiates a processor topology and maintains a buffer
# for each of its assigned partitions.
# If a topology has two input topics with 32 partitions, it will
# create 32 tasks. Each of these task maintains two buffers, one per
# input topic. This will lead to 64 buffers, and, with default configuration
# of 10485760 bytes (=10MB) of buffering, up to 640MB Memory usage.
STREAMS_CACHE_MAX_BYTES_BUFFERING_CONFIG=10485760

# commit.interval.ms
# The frequency in milliseconds with which to commit processing progress.
# The semantics of caching is that data is flushed to the state store and
# forwarded to the next downstream processor node whenever the earliest of
# commit.interval.ms or cache.max.bytes.buffering (cache pressure) hits.
STREAMS_COMMIT_INTERVAL_MS=30000

# buffer.memory
# The total bytes of memory the producer can use to buffer records waiting
# to be sent to the server.
# Default of 33554432 = 32MB
STREAMS_BUFFER_MEMORY=33554432

# fetch.max.bytes
# The maximum amount of data the server should return for a fetch request.
# Default 0f 52428800 = 50MB
STREAMS_FETCH_MAX_BYTES=52428800

# fetch.max.wait.ms
# The maximum amount of time the server will block before answering the fetch request if there isn't sufficient data to
# immediately satisfy the requirement given by fetch.min.bytes.
# Default of 500 = half a second
STREAMS_FETCH_MAX_WAIT_MS=500

# send.buffer.bytes
# The size of the TCP send buffer (SO_SNDBUF) to use when sending data.
# If the value is -1, the OS default will be used.
STREAMS_SEND_BUFFER_BYTES=131072

# receive.buffer.bytes
# The size of the TCP receive buffer (SO_RCVBUF) to use when reading data.
# If the value is -1, the OS default will be used.
STREAMS_RECEIVE_BUFFER_BYTES=32768

# buffered.records.per.partition
# Maximum number of records to buffer per partition.
STREAMS_BUFFERED_RECORDS_PER_PARTITION=1000
